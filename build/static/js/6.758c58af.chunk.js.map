{"version":3,"sources":["../node_modules/_@babel_runtime@7.8.7@@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/_@babel_runtime@7.8.7@@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/_@babel_runtime@7.8.7@@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/_@babel_runtime@7.8.7@@babel/runtime/helpers/esm/nonIterableSpread.js","components/chatMes/index.js","components/liaison/index.js","components/news/index.js","pages/info.js","store/info/actionCrater.js","api/server.js","api/index.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","ChatMes","props","state","chatList","id","avatar","name","news","time","className","this","map","item","index","key","src","alt","Component","Liaison","prevProps","list","items","indexs","lid","setState","onClick","getMore","bind","require","group","sign","current_state","News","nav","value","navID","store","subscribe","getState","info","data","callback","console","log","type","onChange","changeInput","placeholder","navTab","Category","action","dispatch","linkList","then","res","linkListData","GETINFOLIST","title","post","url","params","Promise","resolve","reject","axios","QS","stringify","catch","err","defaults","baseURL","timeout","headers","interceptors","request","use","config","token","Authorization","error","response","status","code","Toast","fail","setTimeout","offline","swipeList","activeList","hotSaleList","navList","cateList"],"mappings":"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","file":"static/js/6.758c58af.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React, { Component } from \"react\";\r\nimport \"./index.css\";\r\n\r\nclass ChatMes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            chatList: [\r\n                {\r\n                  id: 1,\r\n                  avatar:\r\n                    \"https://dss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=2471723103,4261647594&fm=26&gp=0.jpg\",\r\n                  name: \"hiha\",\r\n                  news: \"没有谁的人生是一帆风顺的\",\r\n                  time: \"2020-3-15\"\r\n                },\r\n                {\r\n                  id: 2,\r\n                  avatar:\r\n                    \"http://img5.imgtn.bdimg.com/it/u=2717062052,3164034025&fm=26&gp=0.jpg\",\r\n                  name: \"req\",\r\n                  news: \"没有谁一生下来就懂得成长\",\r\n                  time: \"2020-3-18\"\r\n                },\r\n                {\r\n                  id: 3,\r\n                  avatar:\r\n                    \"http://img4.imgtn.bdimg.com/it/u=2826129518,240074888&fm=26&gp=0.jpg\",\r\n                  name: \"frg\",\r\n                  news: \"是经过了不断的磨练，我们才学会了成长\",\r\n                  time: \"2020-3-17\"\r\n                },\r\n                {\r\n                  id: 4,\r\n                  avatar:\r\n                    \"http://img0.imgtn.bdimg.com/it/u=622451152,3709659384&fm=11&gp=0.jpg\",\r\n                  name: \"uiw\",\r\n                  news: \"你只能折腾到在乎你的人，对于不在乎你的人，忘记了你的人，你的所作所为根本起不了任何作用。\",\r\n                  time: \"2020-3-16\"\r\n                },\r\n                {\r\n                  id: 5,\r\n                  avatar:\r\n                    \"http://img0.imgtn.bdimg.com/it/u=4008167438,875420318&fm=11&gp=0.jpg\",\r\n                  name: \"poop\",\r\n                  news: \"低头是一种潜质，它不是自卑，也不是怯弱，它是清醒中的嬗变。\",\r\n                  time: \"2020-3-16\"\r\n                },\r\n                {\r\n                  id: 6,\r\n                  avatar:\r\n                    \"http://img3.imgtn.bdimg.com/it/u=1152772125,3388989574&fm=11&gp=0.jpg\",\r\n                  name: \"nika\",\r\n                  news: \"稍微低一下头，或者我们的人生路会更精彩。\",\r\n                  time: \"2020-3-15\"\r\n                },\r\n                {\r\n                  id: 7,\r\n                  avatar:\r\n                    \"http://img1.imgtn.bdimg.com/it/u=97571592,2934218527&fm=11&gp=0.jpg\",\r\n                  name: \"frg\",\r\n                  news: \"一个人总要走陌生的路，看陌生的风景，听陌生的歌。\",\r\n                  time: \"2020-3-17\"\r\n                },\r\n                {\r\n                  id: 8,\r\n                  avatar:\r\n                    \"http://img5.imgtn.bdimg.com/it/u=280339489,3521108476&fm=26&gp=0.jpg\",\r\n                  name: \"uiw\",\r\n                  news: \"最后你会发现，原本费尽心机想要忘记的事情真的就那么忘记了。\",\r\n                  time: \"2020-3-16\"\r\n                },\r\n                {\r\n                  id: 9,\r\n                  avatar:\r\n                    \"http://img2.imgtn.bdimg.com/it/u=2626877385,2524735107&fm=11&gp=0.jpg\",\r\n                  name: \"poop\",\r\n                  news: \"别因为别人说了你想听的话，就相信他们；也别因为别人说了你不想听的话，就记恨他们。\",\r\n                  time: \"2020-3-16\"\r\n                },\r\n                {\r\n                  id: 10,\r\n                  avatar:\r\n                    \"http://img4.imgtn.bdimg.com/it/u=2231231470,4098557134&fm=26&gp=0.jpg\",\r\n                  name: \"nikaqq\",\r\n                  news: \"有时，好听的话不一定是真话，不想听的话未必就是坏话。\",\r\n                  time: \"2020-3-15\"\r\n                },\r\n                {\r\n                  id: 11,\r\n                  avatar:\r\n                    \"http://img3.imgtn.bdimg.com/it/u=1980532550,2285588719&fm=11&gp=0.jpg\",\r\n                  name: \"poopwww\",\r\n                  news: \"人生做的是一场减法，见一面少一面，所以有人说，不是你现在有多少钱，而是你还能活多少年。\",\r\n                  time: \"2020-3-16\"\r\n                },\r\n                {\r\n                  id: 12,\r\n                  avatar:\r\n                    \"http://img3.imgtn.bdimg.com/it/u=3235211859,22762362&fm=11&gp=0.jpg\",\r\n                  name: \"nikaxdss\",\r\n                  news: \"人生不过三万天，成功和失败均要坦然，是非恩怨莫在意，健康快乐最值钱。\",\r\n                  time: \"2020-3-15\"\r\n                }\r\n              ]\r\n         }\r\n    }\r\n    render() { \r\n        return (\r\n            <div className=\"chatmes\">\r\n              <ul>\r\n                {this.state.chatList.map((item, index) => {\r\n                  return (\r\n                    <li key={item.id}>\r\n                      <div className=\"lt\">\r\n                        <img src={item.avatar} alt=\"\" />\r\n                      </div>\r\n                      <div className=\"rt\">\r\n                        <div className=\"tops\">\r\n                          <span className=\"name\">{item.name}</span>\r\n                          <span>{item.time}</span>\r\n                        </div>\r\n                        <div className=\"bot\">{item.news}</div>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n \r\nexport default ChatMes;","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport \"./index.css\";\r\n\r\nclass Liaison extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n          Liaison: []\r\n         }\r\n        //  console.log(this.props.Liaison)\r\n    }\r\n   \r\n  componentDidUpdate(prevProps){\r\n        // console.log(prevProps)\r\n  }\r\n  static getDerivedStateFromProps(props, current_state) {\r\n    if(props.Liaison.length !== current_state.Liaison.length){\r\n      // console.log(props)\r\n      // console.log(current_state)\r\n    }\r\n    return null;\r\n  }\r\n    getMore(item){\r\n        item.state = !item.state;\r\n        let list = [...this.props.Liaison];\r\n        list.map((items, indexs) => {\r\n            if (items.lid === item.lid) {\r\n              items = item;\r\n            }\r\n            return item // 消除警告\r\n        });\r\n        this.setState({\r\n          Liaison: list\r\n        });\r\n    }\r\n    render() { \r\n        return ( \r\n            <div className=\"liaison\">\r\n                <ul>\r\n                   {this.props.Liaison.map((item, index) => {\r\n                       return(\r\n                        <li key={item.lid}>\r\n                            <div className=\"lis-top\" onClick={this.getMore.bind(this, item)}>\r\n                                <div className=\"icon\">\r\n                                    {!item.state&&( <img src={require(\"../../common/images/arrow.png\")} alt=\"\"/> )}\r\n                                    {item.state&&( <img src={require(\"../../common/images/down.png\")} alt=\"\"/> )}\r\n                                </div>\r\n                                <div className=\"names\">{item.group}</div>\r\n                            </div>\r\n                            <div className=\"lis-ul\">\r\n                                {item.list.map((items, indexs) => {\r\n                                    return(\r\n                                        <Fragment key={items.id}>\r\n                                            {item.state&&(\r\n                                                <div className=\"items-li\">\r\n                                                    <div className=\"lts\">\r\n                                                        <img src={items.avatar} alt=\"\" />\r\n                                                    </div>\r\n                                                    <div className=\"rts\">\r\n                                                        <div>{items.name}</div>\r\n                                                        <div className=\"sign\">{items.sign}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n                                        </Fragment>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </li>\r\n                       )\r\n                   })}\r\n                </ul>\r\n            </div>\r\n         );\r\n    }\r\n}\r\nLiaison.propTypes = {\r\n  Liaison:PropTypes.array,\r\n}\r\n// https://www.jianshu.com/p/3f5514843b8a\r\nexport default Liaison;","\r\n\r\nimport React, { Component } from \"react\";\r\nimport \"./index.css\";\r\nimport ChatMes from \"../chatMes\";\r\nimport Liaison from \"../liaison\";\r\nimport store from '../../store'\r\n\r\nclass News extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            nav: [\r\n                { id: 1, value: \"联系人\" },\r\n                { id: 2, value: \"消息\" }\r\n              ],\r\n            navID: 1,\r\n            Liaison:[],\r\n            ChatMes:[]\r\n         }\r\n         //订阅Redux的状态\r\n         store.subscribe(()=>{\r\n            this.setState({\r\n               Liaison:store.getState().info.data\r\n            })\r\n        }) \r\n    }\r\n    componentDidMount(){\r\n       \r\n    }\r\n    componentWillUnmount(){\r\n        // 当在次页面切换到别的页面在返回来时报错\r\n        // 解决Warning: Can't perform a React state update on an unmounted component.\r\n        // This is a no-op, but it indicates a memory leak in your application. To fix,\r\n        // cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.\r\n        //https://zhuanlan.zhihu.com/p/80796695\r\n        this.setState = (state, callback) => {\r\n            return;\r\n        }\r\n    }\r\n    changeInput(){\r\n        console.log(\"change\")\r\n    }\r\n    render() { \r\n        return ( \r\n            <div className=\"news\">\r\n                <div className=\"search\">\r\n                    <div className=\"icon\">\r\n                        <img src={require(\"../../common/images/search.png\")} alt=\"\" />\r\n                    </div>\r\n                    <input type=\"text\" value=\"\" onChange={this.changeInput.bind(this)} placeholder=\"搜索\" />\r\n                </div>\r\n                <div className=\"chat\">\r\n                    <ul className=\"top\">\r\n                        {this.state.nav.map((item,index)=>{\r\n                            return(\r\n                                <li className={ this.state.navID === item.id ? \"item active\" : \"item\"} key={item.id} onClick={this.navTab.bind(this, item.id)}>\r\n                                    {item.value}\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                    <div className=\"bottom\">\r\n                        {this.state.navID === 1 && <Liaison Liaison={this.state.Liaison} />}\r\n                        {this.state.navID === 2 && <ChatMes />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n    navTab(id){\r\n        this.setState({navID:id})\r\n    }\r\n}\r\n \r\nexport default News;","import React, { Component } from \"react\";\r\nimport \"../common/style/app.css\";\r\nimport AHeader from \"../components/header\";\r\nimport Footer from \"../components/footer\";\r\nimport News from \"../components/news\";\r\nimport {getLinkListData} from \"../store/info/actionCrater\";\r\nimport store from '../store'\r\nclass Category extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n     componentDidMount(){\r\n        const action = getLinkListData()\r\n        store.dispatch(action)\r\n    }\r\n    render() { \r\n        return ( \r\n            <div className=\"info\">\r\n                <AHeader title=\"消息\" />\r\n                <News />\r\n                <Footer />\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Category;","import {linkList,chatList} from \"../../api/index\";\r\nimport { GETINFOLIST,CHANGEINFOLIST } from './actionType'\r\n\r\n// let chatListData = await chatList({type:\"chatList\"});\r\n\r\nexport const getLinkListData = ()=>{\r\n \r\n    return (dispatch)=>{\r\n        linkList({type:\"linkList\"}).then((res)=>{\r\n            let linkListData = res.data.linkList;\r\n            dispatch({type:GETINFOLIST,data:linkListData})\r\n        });\r\n    }\r\n    \r\n}\r\n","import axios from 'axios'\r\nimport QS from 'qs';\r\nimport { Toast } from 'antd-mobile';\r\nif (process.env.NODE_ENV === 'development') {\r\n    axios.defaults.baseURL = ' http://easy-mock.liuup.com/mock/5e7a1637b7eeed4e76fec766/myshop'\r\n} else if (process.env.NODE_ENV === 'production') {\r\n    axios.defaults.baseURL = ' http://easy-mock.liuup.com/mock/5e7a1637b7eeed4e76fec766/myshop'\r\n}\r\naxios.defaults.timeout = 10000;\r\n// 请求头信息是为post请求设置\r\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\r\n  \r\n  // 请求拦截器\r\naxios.interceptors.request.use(\r\n    config => {\r\n        const token = \"store.state.token\"\r\n      // 每次发送请求之前判断是否存在token\r\n      // 如果存在，则统一在http请求的header都加上token，这样后台根据token判断你的登录情况，此处token一般是用户完成登录后储存到localstorage里的\r\n      token && (config.headers.Authorization = token)\r\n      return config\r\n    },\r\n    error => {\r\n      return Promise.error(error)\r\n    })\r\n  // 响应拦截器\r\naxios.interceptors.response.use(response => {\r\n    // 如果返回的状态码为200，说明接口请求成功，可以正常拿到数据\r\n    // 否则的话抛出错误\r\n    if (response.status === 200) {\r\n      if (response.data.code === 511) {\r\n        // 未授权调取授权接口\r\n      } else if (response.data.code === 510) {\r\n        // 未登录跳转登录页\r\n      } else {\r\n        return Promise.resolve(response)\r\n      }\r\n    } else {\r\n      return Promise.reject(response)\r\n    }\r\n  }, error => {\r\n    // 我们可以在这里对异常状态作统一处理\r\n    if (error.response.status) {            \r\n        switch (error.response.status) {                \r\n            // 401: 未登录\r\n            // 未登录则跳转登录页面，并携带当前页面的路径\r\n            // 在登录成功后返回当前页面，这一步需要在登录页操作。                \r\n            case 401:                    \r\n                // router.replace({                        \r\n                //     path: '/login',                        \r\n                //     query: { \r\n                //         redirect: router.currentRoute.fullPath \r\n                //     }\r\n                // });\r\n                break;\r\n\r\n            // 403 token过期\r\n            // 登录过期对用户进行提示\r\n            // 清除本地token和清空vuex中token对象\r\n            // 跳转登录页面                \r\n            case 403:\r\n                Toast.fail('登录过期，请重新登录',1)\r\n                // 清除token\r\n                // localStorage.removeItem('token');\r\n                // store.commit('loginSuccess', null);\r\n                // 跳转登录页面，并将要浏览的页面fullPath传过去，登录成功后跳转需要访问的页面 \r\n                setTimeout(() => {                        \r\n                    // router.replace({                            \r\n                    //     path: '/login',                            \r\n                    //     query: { \r\n                    //         redirect: router.currentRoute.fullPath \r\n                    //     }                        \r\n                    // });                    \r\n                }, 1000);                    \r\n                break; \r\n\r\n            // 404请求不存在\r\n            case 404:\r\n                Toast.offline('Network connection failed !!!', 1);\r\n                break;\r\n            // 其他错误，直接抛出错误提示\r\n            default:\r\n                // Toast({\r\n                //     message: error.response.data.message,\r\n                //     duration: 1500,\r\n                //     forbidClick: true\r\n                // });\r\n        }\r\n        return Promise.reject(error.response);\r\n    }\r\n  })\r\n  \r\n\r\n/**\r\n * get方法，对应get请求\r\n * @param {String} url [请求的url地址]\r\n * @param {Object} params [请求时携带的参数]\r\n */\r\nexport function get(url, params){    \r\n    return new Promise((resolve, reject) =>{        \r\n        axios.get(url, {            \r\n            params: params        \r\n        }).then(res => {\r\n            resolve(res.data);\r\n        }).catch(err =>{\r\n            reject(err.data)        \r\n    })    \r\n});}\r\n\r\n\r\n/** \r\n * post方法，对应post请求 \r\n * @param {String} url [请求的url地址] \r\n * @param {Object} params [请求时携带的参数] \r\n */\r\nexport function post(url, params) {\r\n    return new Promise((resolve, reject) => {\r\n         axios.post(url, QS.stringify(params))\r\n        .then(res => {\r\n            resolve(res.data);\r\n        })\r\n        .catch(err =>{\r\n            reject(err.data)\r\n        })\r\n    });\r\n}\r\n\r\n\r\n/** \r\n * 请求失败后的错误统一处理 \r\n * @param {Number} status 请求失败的状态码\r\n */\r\nconst errorHandle = (status, other) => {\r\n    // 状态码判断\r\n    switch (status) {\r\n    // 401: 未登录状态，跳转登录页\r\n    case 401:\r\n        // toLogin();\r\n        break;\r\n    // 403 token过期\r\n    // 清除token并跳转登录页\r\n    case 403:\r\n        // tip('登录过期，请重新登录');\r\n        // localStorage.removeItem('token');\r\n        // store.commit('loginSuccess', null);\r\n        setTimeout(() => {\r\n            // toLogin();\r\n        }, 1000);\r\n        break;\r\n    // 404请求不存在\r\n    case 404:\r\n        // tip('请求的资源不存在'); \r\n        break;\r\n    default:\r\n        console.log(other);   \r\n}}","/**   \r\n * api接口统一管理\r\n */\r\nimport { get, post } from './server'\r\n// 轮播图\r\nexport const swipeList = (params) => post('/mock', params);\r\n\r\n// 活动列表\r\nexport const activeList = (params) => post('/mock', params);\r\n\r\n// 热卖单品\r\nexport const hotSaleList = (params) => post('/mock', params);\r\n\r\n// 导航栏\r\nexport const navList = (params) => post('/mock', params);\r\n\r\n// 分类页面\r\nexport const cateList = (params) => post('/mock', params);\r\n\r\n// 消息列表\r\nexport const linkList = (params) => post('/mock', params);\r\n// 消息列表2\r\nexport const chatList = (params) => post('/mock', params);"],"sourceRoot":""}