{"version":3,"sources":["common sync /^/images.*$","pages/home.js","api/server.js","api/index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Home","props","state","index","swipeList","activeList","hotSaleList","navList","type","swipeListData","activeListData","hotSaleListData","navListData","Promise","all","then","setState","data","className","title","swipeOptions","continuous","auto","key","this","length","item","src","require","alt","imgSrc","name","titleImg","bigTitle","titleIntroduce","list","_item","_index","img","smallTitle","introduce","detailImg","price","salesVolume","Component","post","url","params","reject","axios","QS","stringify","res","catch","err","defaults","baseURL","timeout","headers","interceptors","request","use","config","token","Authorization","error","response","status","Toast","fail","setTimeout","offline","cateList","linkList"],"mappings":"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","file":"static/js/9.ab4ecd91.chunk.js","sourcesContent":["var map = {\n\t\"./images/PayResources.jpg\": 89,\n\t\"./images/arrow.png\": 65,\n\t\"./images/articlesDaily.jpg\": 116,\n\t\"./images/avator.jpg\": 90,\n\t\"./images/bg.jpg\": 117,\n\t\"./images/cart.jpg\": 118,\n\t\"./images/category.jpg\": 119,\n\t\"./images/chat.jpg\": 120,\n\t\"./images/clothes.jpg\": 121,\n\t\"./images/collectGoods.jpg\": 122,\n\t\"./images/collection.jpg\": 123,\n\t\"./images/down.png\": 91,\n\t\"./images/generationEvaluation.jpg\": 124,\n\t\"./images/home.jpg\": 125,\n\t\"./images/info.jpg\": 126,\n\t\"./images/my.jpg\": 127,\n\t\"./images/nav.png\": 128,\n\t\"./images/payChannel.jpg\": 92,\n\t\"./images/points.jpg\": 129,\n\t\"./images/recommendation.jpg\": 130,\n\t\"./images/refund.jpg\": 131,\n\t\"./images/residence.jpg\": 132,\n\t\"./images/search.png\": 93,\n\t\"./images/shoes.jpg\": 133,\n\t\"./images/substitutePay.jpg\": 134,\n\t\"./images/swiper1.jpg\": 135,\n\t\"./images/swiper2.jpg\": 136,\n\t\"./images/swiper3.jpg\": 137,\n\t\"./images/swiper4.jpg\": 138,\n\t\"./images/wallet.jpg\": 139\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 278;","import React, { Component } from \"react\";\r\nimport Header from \"../components/header\";\r\nimport Footer from \"../components/footer\";\r\nimport ReactSwipe from \"react-swipe\";\r\nimport \"../common/style/app.css\";\r\nimport {swipeList,activeList,hotSaleList, navList} from \"../api/index\";\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            index: 0,\r\n            swipeList:[],\r\n            activeList:[],\r\n            hotSaleList:[],\r\n            navList:[]\r\n         }\r\n    }\r\n    async componentDidMount(){\r\n        let swipeListData = await swipeList({type:\"swipeList\"});\r\n        let activeListData = await activeList({type:\"activeList\"});\r\n        let hotSaleListData = await hotSaleList({type:\"hotSaleList\"});\r\n        let navListData = await navList({type:\"navList\"});\r\n        \r\n        Promise.all([swipeListData,activeListData,hotSaleListData,navListData]).then(([swipeListData,activeListData,hotSaleListData,navListData])=>{\r\n            this.setState({\r\n                swipeList:swipeListData.data.swipeList,\r\n                activeList:activeListData.data.activeList,\r\n                hotSaleList:hotSaleListData.data.hotSaleList,\r\n                navList:navListData.data.navList,\r\n            })\r\n        })\r\n    }\r\n    render() { \r\n        return (\r\n            <div className=\"home\">\r\n                <Header title=\"首页\"/>\r\n                <ReactSwipe\r\n                    swipeOptions={{ continuous: true, auto: 3000 }}\r\n                    key={this.state.swipeList.length}\r\n                    className=\"swipers\"\r\n                >\r\n                    {this.state.swipeList.map((item,index)=>{\r\n                        return(\r\n                            <div key={index} className=\"swiper\">\r\n                                <img src={require(\"../common/images\" + item)} alt=\"\" />\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </ReactSwipe>\r\n                <div className=\"nav\">\r\n                    <ul>\r\n                        {\r\n                            this.state.navList.map((item,index)=>{\r\n                                return(\r\n                                    <li key={index}>\r\n                                        <img src={require(\"../common/images/\" + item.imgSrc)} alt=\"\"/>\r\n                                        <span>{item.name}</span>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div className=\"bodyblock\">\r\n                    <div className=\"block-active\">\r\n                        <ul>\r\n                            {this.state.activeList.map((item,index)=>{\r\n                                return(\r\n                                    <li className=\"items\" key={item + index}>\r\n                                        <div className=\"title\">\r\n                                            <img src={item.titleImg} alt={item.bigTitle} />\r\n                                            <span>{item.titleIntroduce}</span>\r\n                                        </div>\r\n                                        <ul className=\"content\">\r\n                                            {item.list.map((_item,_index)=>{\r\n                                                return(\r\n                                                    <li key={_item + _index}>\r\n                                                        <img src={_item.img} alt=\"\" />\r\n                                                        <div className=\"rt\">\r\n                                                            { _item.smallTitle && <span className=\"smallTitle\">{_item.smallTitle}</span>}\r\n                                                            <span className=\"introduce\">{_item.introduce} </span>\r\n                                                        </div>\r\n                                                    </li>\r\n                                                )\r\n                                            })}\r\n                                        </ul>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"recommend\">\r\n                        <img\r\n                        src=\"https://img.alicdn.com/simba/img/TB1pIQFjbr1gK0jSZR0SuvP8XXa.jpg\"\r\n                        alt=\"\"\r\n                        />\r\n                    </div>\r\n                     {/* 热卖单品 */}\r\n                     <div className=\"hot-sale\">\r\n                        <div className=\"title\">\r\n                            <span>热卖单品</span>\r\n                        </div>\r\n                        <div className=\"sale-bodyblock\">\r\n                            <ul>\r\n                                {this.state.hotSaleList.map((item,index)=>{\r\n                                    return(\r\n                                        <li key={item + index}>\r\n                                            <img src={item.detailImg} alt=\"\" />\r\n                                            <p>{item.title}</p>\r\n                                            <div className=\"hot-bt\">\r\n                                                <span>\r\n                                                    <span className=\"mark\">￥</span>\r\n                                                    <span className=\"price\">{item.price}</span>\r\n                                                </span>\r\n                                                <span className=\"volume\">\r\n                                                    {item.salesVolume !== 0\r\n                                                    ? \"销量：\" + item.salesVolume\r\n                                                    : \"\"}\r\n                                                </span>\r\n                                            </div>\r\n                                        </li>\r\n                                    )\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                     </div>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Home;","import axios from 'axios'\r\nimport QS from 'qs';\r\nimport { Toast } from 'antd-mobile';\r\nif (process.env.NODE_ENV === 'development') {\r\n    axios.defaults.baseURL = ' http://easy-mock.liuup.com/mock/5e7a1637b7eeed4e76fec766/myshop'\r\n} else if (process.env.NODE_ENV === 'production') {\r\n    axios.defaults.baseURL = ' http://easy-mock.liuup.com/mock/5e7a1637b7eeed4e76fec766/myshop'\r\n}\r\naxios.defaults.timeout = 10000;\r\n// 请求头信息是为post请求设置\r\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\r\n  \r\n  // 请求拦截器\r\naxios.interceptors.request.use(\r\n    config => {\r\n        const token = \"store.state.token\"\r\n      // 每次发送请求之前判断是否存在token\r\n      // 如果存在，则统一在http请求的header都加上token，这样后台根据token判断你的登录情况，此处token一般是用户完成登录后储存到localstorage里的\r\n      token && (config.headers.Authorization = token)\r\n      return config\r\n    },\r\n    error => {\r\n      return Promise.error(error)\r\n    })\r\n  // 响应拦截器\r\naxios.interceptors.response.use(response => {\r\n    // 如果返回的状态码为200，说明接口请求成功，可以正常拿到数据\r\n    // 否则的话抛出错误\r\n    if (response.status === 200) {\r\n      if (response.data.code === 511) {\r\n        // 未授权调取授权接口\r\n      } else if (response.data.code === 510) {\r\n        // 未登录跳转登录页\r\n      } else {\r\n        return Promise.resolve(response)\r\n      }\r\n    } else {\r\n      return Promise.reject(response)\r\n    }\r\n  }, error => {\r\n    // 我们可以在这里对异常状态作统一处理\r\n    if (error.response.status) {            \r\n        switch (error.response.status) {                \r\n            // 401: 未登录\r\n            // 未登录则跳转登录页面，并携带当前页面的路径\r\n            // 在登录成功后返回当前页面，这一步需要在登录页操作。                \r\n            case 401:                    \r\n                // router.replace({                        \r\n                //     path: '/login',                        \r\n                //     query: { \r\n                //         redirect: router.currentRoute.fullPath \r\n                //     }\r\n                // });\r\n                break;\r\n\r\n            // 403 token过期\r\n            // 登录过期对用户进行提示\r\n            // 清除本地token和清空vuex中token对象\r\n            // 跳转登录页面                \r\n            case 403:\r\n                Toast.fail('登录过期，请重新登录',1)\r\n                // 清除token\r\n                // localStorage.removeItem('token');\r\n                // store.commit('loginSuccess', null);\r\n                // 跳转登录页面，并将要浏览的页面fullPath传过去，登录成功后跳转需要访问的页面 \r\n                setTimeout(() => {                        \r\n                    // router.replace({                            \r\n                    //     path: '/login',                            \r\n                    //     query: { \r\n                    //         redirect: router.currentRoute.fullPath \r\n                    //     }                        \r\n                    // });                    \r\n                }, 1000);                    \r\n                break; \r\n\r\n            // 404请求不存在\r\n            case 404:\r\n                Toast.offline('Network connection failed !!!', 1);\r\n                break;\r\n            // 其他错误，直接抛出错误提示\r\n            default:\r\n                // Toast({\r\n                //     message: error.response.data.message,\r\n                //     duration: 1500,\r\n                //     forbidClick: true\r\n                // });\r\n        }\r\n        return Promise.reject(error.response);\r\n    }\r\n  })\r\n  \r\n\r\n/**\r\n * get方法，对应get请求\r\n * @param {String} url [请求的url地址]\r\n * @param {Object} params [请求时携带的参数]\r\n */\r\nexport function get(url, params){    \r\n    return new Promise((resolve, reject) =>{        \r\n        axios.get(url, {            \r\n            params: params        \r\n        }).then(res => {\r\n            resolve(res.data);\r\n        }).catch(err =>{\r\n            reject(err.data)        \r\n    })    \r\n});}\r\n\r\n\r\n/** \r\n * post方法，对应post请求 \r\n * @param {String} url [请求的url地址] \r\n * @param {Object} params [请求时携带的参数] \r\n */\r\nexport function post(url, params) {\r\n    return new Promise((resolve, reject) => {\r\n         axios.post(url, QS.stringify(params))\r\n        .then(res => {\r\n            resolve(res.data);\r\n        })\r\n        .catch(err =>{\r\n            reject(err.data)\r\n        })\r\n    });\r\n}\r\n\r\n\r\n/** \r\n * 请求失败后的错误统一处理 \r\n * @param {Number} status 请求失败的状态码\r\n */\r\nconst errorHandle = (status, other) => {\r\n    // 状态码判断\r\n    switch (status) {\r\n    // 401: 未登录状态，跳转登录页\r\n    case 401:\r\n        // toLogin();\r\n        break;\r\n    // 403 token过期\r\n    // 清除token并跳转登录页\r\n    case 403:\r\n        // tip('登录过期，请重新登录');\r\n        // localStorage.removeItem('token');\r\n        // store.commit('loginSuccess', null);\r\n        setTimeout(() => {\r\n            // toLogin();\r\n        }, 1000);\r\n        break;\r\n    // 404请求不存在\r\n    case 404:\r\n        // tip('请求的资源不存在'); \r\n        break;\r\n    default:\r\n        console.log(other);   \r\n}}","/**   \r\n * api接口统一管理\r\n */\r\nimport { get, post } from './server'\r\n// 轮播图\r\nexport const swipeList = (params) => post('/mock', params);\r\n\r\n// 活动列表\r\nexport const activeList = (params) => post('/mock', params);\r\n\r\n// 热卖单品\r\nexport const hotSaleList = (params) => post('/mock', params);\r\n\r\n// 导航栏\r\nexport const navList = (params) => post('/mock', params);\r\n\r\n// 分类页面\r\nexport const cateList = (params) => post('/mock', params);\r\n\r\n// 消息列表\r\nexport const linkList = (params) => post('/mock', params);\r\n// 消息列表2\r\nexport const chatList = (params) => post('/mock', params);"],"sourceRoot":""}